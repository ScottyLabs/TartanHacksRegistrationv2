{
    "name": "Quill",
    "description": "Registration, for hackathons!",
    "env": {
        "NODE_ENV": {
            "description": "dev or production",
            "value": "dev"
        },
        "JWT_SECRET": {
            "description": "Long random string used to verify JWT tokens for user authentication",
            "generator": "secret"
        },
        "ROOT_URL": {
            "description": "Root URL for your registration system",
            "value": "http://localhost:5000"
        },
        "ADMIN_EMAIL": {
            "description": "Credentials for the admin user created at app initialization",
            "value": "admin@example.com"
        },
        "ADMIN_PASS": "party",
        "EMAIL_ADDRESS": {
            "description": "The email address that is included in the 'email us' link at the bottom of emails.",
            "value": "team@example.com"
        },
        "HACKATHON_NAME": "Hackathon",
        "TWITTER_HANDLE": {
            "description": "Everything after https://twitter.com/",
            "value": "hackathon"
        },
        "FACEBOOK_HANDLE": {
            "description": "Everything after https://facebook.com/",
            "value": "hackathon"
        },
        "EMAIL_CONTACT": {
            "description": "Used to send verification, registration, and confirmation emails",
            "value": "Hackathon Team <team@example.com>"
        },
        "EMAIL_HOST": "smtp.gmail.com",
        "EMAIL_USER": "foo@bar.com",
        "EMAIL_PASS": "password",
        "EMAIL_PORT": "465",
        "EMAIL_HEADER_IMAGE": "https://s3.amazonaws.com/hackmit-assets/Banner_600.jpg",
        "TEAM_MAX_SIZE": {
            "description": "Limits the number of users that can join a team",
            "value": "4"
        },
        "SLACK_HOOK": {
            "description": "Used to send error messages to your Slack team when the API catches an error",
            "value": "https://hooks.slack.com/services/your-api-key"
        },
        "CLIENT_ID": {
            "description": "Used to access the Google Drive API",
            "value": "find on https://developers.google.com/drive/api/v3/quickstart/nodejs"
        },
        "CLIENT_SECRET": {
            "description": "Used to access the Google Drive API, see above",
            "value": "see above"
        },
        "REFRESH_TOKEN": {
            "description": "Used to access the Google Drive API. Refresh token is used to generate temporary access tokens.",
            "value": "run nodejs tutorial at https://developers.google.com/drive/api/v3/quickstart/nodejs, find refresh token there, ask Richard for details"
        },
        "FOLDER_ID": {
            "description": "Folder ID of the resume folder on Google Drive",
            "value": "find on Google Drive, google this"
        }
    },
    "addons": [
        "mongolab"
    ],
    "keywords": ["quill", "node", "express", "mongo"]
}
